{"version":3,"file":"ngx-file-drop.js","sources":["../../src/ngx-file-drop/ngx-file-drop-entry.ts","../../src/ngx-file-drop/ngx-templates.directive.ts","../../src/ngx-file-drop/ngx-file-drop.component.ts","../../src/ngx-file-drop/ngx-file-drop.module.ts","../../src/ngx-file-drop.ts"],"names":[],"mappings":"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","sourcesContent":["import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\r\n\r\n/**\r\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\r\n * properties of the given {@link FileSystemEntry}.\r\n */\r\nexport class NgxFileDropEntry {\r\n    constructor(\r\n        public relativePath: string,\r\n        public fileEntry: FileSystemEntry\r\n    ) {\r\n    }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[ngx-file-drop-content-tmp]' })\r\nexport class NgxFileDropContentTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) { }\r\n}\r\n","import {\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Subscription, timer } from 'rxjs';\r\n\r\nimport { NgxFileDropEntry } from './ngx-file-drop-entry';\r\nimport { FileSystemDirectoryEntry, FileSystemEntry, FileSystemFileEntry } from './dom.types';\r\nimport { NgxFileDropContentTemplateDirective } from './ngx-templates.directive';\r\n\r\n@Component({\r\n  selector: 'ngx-file-drop',\r\n  templateUrl: './ngx-file-drop.component.html',\r\n  styleUrls: ['./ngx-file-drop.component.scss'],\r\n})\r\nexport class NgxFileDropComponent implements OnDestroy {\r\n\r\n  @Input()\r\n  public accept: string = '*';\r\n\r\n  @Input()\r\n  public directory: boolean = false;\r\n\r\n  @Input()\r\n  public multiple: boolean = true;\r\n\r\n  @Input()\r\n  public dropZoneLabel: string = '';\r\n\r\n  @Input()\r\n  public dropZoneClassName: string = 'ngx-file-drop__drop-zone';\r\n\r\n  @Input()\r\n  public useDragEnter: boolean = false;\r\n\r\n  @Input()\r\n  public contentClassName: string = 'ngx-file-drop__content';\r\n\r\n  @Input()\r\n  public showBrowseBtn: boolean = false;\r\n\r\n  @Input()\r\n  public browseBtnClassName: string = 'btn btn-primary btn-xs ngx-file-drop__browse-btn';\r\n\r\n  @Input()\r\n  public browseBtnLabel: string = 'Browse files';\r\n\r\n  @Output()\r\n  public onFileDrop: EventEmitter<NgxFileDropEntry[]> = new EventEmitter();\r\n\r\n  @Output()\r\n  public onFileOver: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output()\r\n  public onFileLeave: EventEmitter<any> = new EventEmitter();\r\n\r\n  // custom templates\r\n  @ContentChild(NgxFileDropContentTemplateDirective, { read: TemplateRef }) contentTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('fileSelector', { static: true })\r\n  public fileSelector: ElementRef;\r\n\r\n  public isDraggingOverDropZone: boolean = false;\r\n\r\n  private globalDraggingInProgress: boolean = false;\r\n  private readonly globalDragStartListener: () => void;\r\n  private readonly globalDragEndListener: () => void;\r\n\r\n  private files: NgxFileDropEntry[] = [];\r\n  private numOfActiveReadEntries: number = 0;\r\n\r\n  private helperFormEl: HTMLFormElement | null = null;\r\n  private fileInputPlaceholderEl: HTMLDivElement | null = null;\r\n\r\n  private dropEventTimerSubscription: Subscription | null = null;\r\n\r\n  private _disabled: boolean = false;\r\n\r\n  public get disabled(): boolean { return this._disabled; }\r\n\r\n  @Input()\r\n  public set disabled(value: boolean) {\r\n    this._disabled = (value != null && `${value}` !== 'false');\r\n  }\r\n\r\n  constructor(\r\n    private zone: NgZone,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.globalDragStartListener = this.renderer.listen('document', 'dragstart', (evt: Event) => {\r\n      this.globalDraggingInProgress = true;\r\n    });\r\n    this.globalDragEndListener = this.renderer.listen('document', 'dragend', (evt: Event) => {\r\n      this.globalDraggingInProgress = false;\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.dropEventTimerSubscription) {\r\n      this.dropEventTimerSubscription.unsubscribe();\r\n      this.dropEventTimerSubscription = null;\r\n    }\r\n    this.globalDragStartListener();\r\n    this.globalDragEndListener();\r\n    this.files = [];\r\n    this.helperFormEl = null;\r\n    this.fileInputPlaceholderEl = null;\r\n  }\r\n\r\n  public onDragOver(event: DragEvent): void {\r\n    if (this.useDragEnter) {\r\n      this.preventAndStop(event);\r\n      if (event.dataTransfer) {\r\n        event.dataTransfer.dropEffect = 'copy';\r\n      }\r\n    } else if (!this.isDropzoneDisabled() && !this.useDragEnter && event.dataTransfer) {\r\n      if (!this.isDraggingOverDropZone) {\r\n        this.isDraggingOverDropZone = true;\r\n        this.onFileOver.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n      event.dataTransfer.dropEffect = 'copy';\r\n    }\r\n  }\r\n\r\n  public onDragEnter(event: Event): void {\r\n    if (!this.isDropzoneDisabled() && this.useDragEnter) {\r\n      if (!this.isDraggingOverDropZone) {\r\n        this.isDraggingOverDropZone = true;\r\n        this.onFileOver.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  public onDragLeave(event: Event): void {\r\n    if (!this.isDropzoneDisabled()) {\r\n      if (this.isDraggingOverDropZone) {\r\n        this.isDraggingOverDropZone = false;\r\n        this.onFileLeave.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  public dropFiles(event: DragEvent): void {\r\n    if (!this.isDropzoneDisabled()) {\r\n      this.isDraggingOverDropZone = false;\r\n      if (event.dataTransfer) {\r\n        let items: FileList | DataTransferItemList;\r\n        if (event.dataTransfer.items) {\r\n          items = event.dataTransfer.items;\r\n        } else {\r\n          items = event.dataTransfer.files;\r\n        }\r\n        this.preventAndStop(event);\r\n        this.checkFiles(items);\r\n      }\r\n    }\r\n  }\r\n\r\n  public openFileSelector = (event?: MouseEvent): void => {\r\n    if (this.fileSelector && this.fileSelector.nativeElement) {\r\n      (this.fileSelector.nativeElement as HTMLInputElement).click();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes the change event of the file input and adds the given files.\r\n   * @param Event event\r\n   */\r\n  public uploadFiles(event: Event): void {\r\n    if (!this.isDropzoneDisabled()) {\r\n      if (event.target) {\r\n        const items = (event.target as HTMLInputElement).files || ([] as any);\r\n        this.checkFiles(items);\r\n        this.resetFileInput();\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkFiles(items: FileList | DataTransferItemList): void {\r\n    for (let i = 0; i < items.length; i++) {\r\n      const item = items[i];\r\n      let entry: FileSystemEntry | null = null;\r\n      if (this.canGetAsEntry(item)) {\r\n        entry = item.webkitGetAsEntry();\r\n      }\r\n\r\n      if (!entry) {\r\n        if (item) {\r\n          const fakeFileEntry: FileSystemFileEntry = {\r\n            name: (item as File).name,\r\n            isDirectory: false,\r\n            isFile: true,\r\n            file: <T>(callback: (filea: File) => T) => callback(item as File),\r\n          };\r\n          const toUpload: NgxFileDropEntry = new NgxFileDropEntry(fakeFileEntry.name, fakeFileEntry);\r\n          this.addToQueue(toUpload);\r\n        }\r\n\r\n      } else {\r\n        if (entry.isFile) {\r\n          const toUpload: NgxFileDropEntry = new NgxFileDropEntry(entry.name, entry);\r\n          this.addToQueue(toUpload);\r\n\r\n        } else if (entry.isDirectory) {\r\n          this.traverseFileTree(entry, entry.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.dropEventTimerSubscription) {\r\n      this.dropEventTimerSubscription.unsubscribe();\r\n    }\r\n    this.dropEventTimerSubscription = timer(200, 200)\r\n      .subscribe(() => {\r\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\r\n          const files = this.files;\r\n          this.files = [];\r\n          this.onFileDrop.emit(files);\r\n        }\r\n      });\r\n  }\r\n\r\n  private traverseFileTree(item: FileSystemEntry, path: string): void {\r\n    if (item.isFile) {\r\n      const toUpload: NgxFileDropEntry = new NgxFileDropEntry(path, item);\r\n      this.files.push(toUpload);\r\n\r\n    } else {\r\n      path = path + '/';\r\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\r\n      let entries: FileSystemEntry[] = [];\r\n\r\n      const readEntries = () => {\r\n        this.numOfActiveReadEntries++;\r\n        dirReader.readEntries((result) => {\r\n          if (!result.length) {\r\n            // add empty folders\r\n            if (entries.length === 0) {\r\n              const toUpload: NgxFileDropEntry = new NgxFileDropEntry(path, item);\r\n              this.zone.run(() => {\r\n                this.addToQueue(toUpload);\r\n              });\r\n\r\n            } else {\r\n              for (let i = 0; i < entries.length; i++) {\r\n                this.zone.run(() => {\r\n                  this.traverseFileTree(entries[i], path + entries[i].name);\r\n                });\r\n              }\r\n            }\r\n\r\n          } else {\r\n            // continue with the reading\r\n            entries = entries.concat(result);\r\n            readEntries();\r\n          }\r\n\r\n          this.numOfActiveReadEntries--;\r\n        });\r\n      };\r\n\r\n      readEntries();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears any added files from the file input element so the same file can subsequently be added multiple times.\r\n   */\r\n  private resetFileInput(): void {\r\n    if (this.fileSelector && this.fileSelector.nativeElement) {\r\n      const fileInputEl = this.fileSelector.nativeElement as HTMLInputElement;\r\n      const fileInputContainerEl = fileInputEl.parentElement;\r\n      const helperFormEl = this.getHelperFormElement();\r\n      const fileInputPlaceholderEl = this.getFileInputPlaceholderElement();\r\n\r\n      // Just a quick check so we do not mess up the DOM (will never happen though).\r\n      if (fileInputContainerEl !== helperFormEl) {\r\n        // Insert the form input placeholder in the DOM before the form input element.\r\n        this.renderer.insertBefore(fileInputContainerEl, fileInputPlaceholderEl, fileInputEl);\r\n        // Add the form input as child of the temporary form element, removing the form input from the DOM.\r\n        this.renderer.appendChild(helperFormEl, fileInputEl);\r\n        // Reset the form, thus clearing the input element of any files.\r\n        helperFormEl.reset();\r\n        // Add the file input back to the DOM in place of the file input placeholder element.\r\n        this.renderer.insertBefore(fileInputContainerEl, fileInputEl, fileInputPlaceholderEl);\r\n        // Remove the input placeholder from the DOM\r\n        this.renderer.removeChild(fileInputContainerEl, fileInputPlaceholderEl);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a cached HTML form element as a helper element to clear the file input element.\r\n   */\r\n  private getHelperFormElement(): HTMLFormElement {\r\n    if (!this.helperFormEl) {\r\n      this.helperFormEl = this.renderer.createElement('form') as HTMLFormElement;\r\n    }\r\n\r\n    return this.helperFormEl;\r\n  }\r\n\r\n  /**\r\n   * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.\r\n   */\r\n  private getFileInputPlaceholderElement(): HTMLDivElement {\r\n    if (!this.fileInputPlaceholderEl) {\r\n      this.fileInputPlaceholderEl = this.renderer.createElement('div') as HTMLDivElement;\r\n    }\r\n\r\n    return this.fileInputPlaceholderEl;\r\n  }\r\n\r\n  private canGetAsEntry(item: any): item is DataTransferItem {\r\n    return !!item.webkitGetAsEntry;\r\n  }\r\n\r\n  private isDropzoneDisabled(): boolean {\r\n    return (this.globalDraggingInProgress || this.disabled);\r\n  }\r\n\r\n  private addToQueue(item: NgxFileDropEntry): void {\r\n    this.files.push(item);\r\n  }\r\n\r\n  private preventAndStop(event: Event): void {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxFileDropComponent } from './ngx-file-drop.component';\r\nimport { NgxFileDropContentTemplateDirective } from './ngx-templates.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxFileDropComponent,\r\n    NgxFileDropContentTemplateDirective,\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    NgxFileDropComponent,\r\n    NgxFileDropContentTemplateDirective,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [\r\n    NgxFileDropComponent\r\n  ],\r\n})\r\nexport class NgxFileDropModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}